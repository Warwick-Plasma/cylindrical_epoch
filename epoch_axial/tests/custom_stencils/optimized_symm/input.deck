begin:control
  nx = 240
  ny = nx/3

  # Final time of simulation
  t_end = 75 * femto

  # Size of domain
  x_min = -12 * micron
  x_max = -x_min
  y_min = x_min
  y_max = x_max

  stdout_frequency = 10

  maxwell_solver = custom
  dt_multiplier = 1
end:control


begin:boundaries
  bc_x_min = simple_laser
  bc_x_max = open
  bc_y_min = periodic
  bc_y_max = periodic
end:boundaries


begin:constant
  lambda0 = 0.5 * micron
  theta = 0.0
end:constant


begin:laser
  boundary = x_min
  intensity_w_cm2 = 1.0e15
  lambda = lambda0 * cos(theta)
  # phase = -2.0 * pi * y * sin(theta) / lambda0
  # polarisation_angle = 0 # pi / 2.0
  profile = gauss(y,0,4*micron)
  t_profile = gauss(time,8*femto,1.8*femto)
end:laser


begin:output
  # Simulated time between output dumps
  dt_snapshot = 25 * femto

  # Properties on grid
  grid = always
  #ex = always
  ey = always
  #ez = always
  #bx = always
  #by = always
  #bz = always
end:output


begin:stencil
  # These coefficients have been calculated with
  # optimize_stencil.py version 0.2+1.g0d913ee

  # using the command line
  # "optimize_stencil.py --Y 3 --symmetric --dt-multiplier 0.99"

  dt = 0.8988685682513151 * dx / c
  betaxy = 0.01862292597327679
  betayx = 0.01862292597327679
  deltax = -0.04155873453935287
  deltay = -0.04155873453935287
end:stencil
